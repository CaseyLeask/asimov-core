
// =============================================================================
// Spacings
// =============================================================================

// Set the spacing $value associated to $name.
// If $name already exists it will be over written.
// Returns the new value of $name.
// -----------------------------------------------------------------------------
// @param $key [String] : $name
// @param $value [Number] : $value
// @param $default [Bool] : whether to merge
// -----------------------------------------------------------------------------
// @return [Number]
@function set-spacing($name, $value, $default:false) {
    @if $default {
        @return set-default("asimov/spacings/#{$name}", $value, "asimov/spacings");
    }

    @return set("asimov/spacings/#{$name}", $value, "asimov/spacings");
}


// Get the breakpoint value associated with $name.
// If $name is a number then it is returned.
// -----------------------------------------------------------------------------
// @param $key [String] : $name
// -----------------------------------------------------------------------------
// @return [Number|Null]
@function get-spacing($name) {
    @if type-of($name) == number {
        @return $name;
    }

    @return lookup(get-spacings(), $name);
}


// Set multiple spacings at once.
// If $default is true $map will be merged with existing spacings.
// If $default is false $map will override all existing spacings.
// Returns a map of all current spacings.
// -----------------------------------------------------------------------------
// @param $key [Map] : $name
// @param $default [Bool] : whether to merge
// -----------------------------------------------------------------------------
// @return [Map]
@function set-spacings($map, $default:false) {
    @if $default {
        @if set-default((asimov: (spacings: $map)), "asimov/spacings") == null {
            @warn("Something went wrong!");
        }
    }

    // Reset the currently settings because `set` will merge by default
    @else if
        set("asimov/spacings", ()) == null or
        set("asimov/spacings", $map, "asimov/spacings") == null
    {
        @warn("Something went wrong!");
    }

    @return get-spacings();
}


// Gets a map of named spacings and their values.
// -----------------------------------------------------------------------------
// @return [Map]
@function get-spacings() {
    $map: map-get($settings, "asimov");
    @return get-component-map("asimov/spacings", lookup($map, "spacings"));
}
