
// =============================================================================
// Colors
// =============================================================================

// Set the color $value associated to $name.
// If $name already exists it will be over written.
// Returns the new value of $name.
// -----------------------------------------------------------------------------
// @param $key [String] : $name
// @param $value [Color] : $value
// @param $default [Bool] : whether to merge
// -----------------------------------------------------------------------------
// @return [Color]
@function set-color($name, $value, $default:false) {
    @if $default {
        @return set-default("asimov/colors/#{$name}", $value);
    }

    @return set("asimov/colors/#{$name}", $value);
}


// Get the color value associated with $name.
// If $name is a color then it is returned.
// -----------------------------------------------------------------------------
// @param $key [String|Color] : $name
// -----------------------------------------------------------------------------
// @return [Color|Null]
@function get-color($name) {
    @if type-of($name) == color {
        @return $name;
    }

    @return get($name, get-colors());
}


// Set multiple colors at once.
// If $default is true $map will be merged with existing colors.
// If $default is false $map will override all existing colors.
// Returns a map of all current colors.
// -----------------------------------------------------------------------------
// @param $key [Map] : $name
// @param $default [Bool] : whether to merge
// -----------------------------------------------------------------------------
// @return [Map]
@function set-colors($map, $default:false) {
    @if $default {
        @if set-default((asimov: (colors: $map))) == null {
            @warn("Something went wrong!");
        }
    }

    // Reset the currently settings because `set` will merge by default
    @else if
        set("asimov/colors", ()) == null or
        set("asimov/colors", $map) == null
    {
        @warn("Something went wrong!");
    }

    @return get-colors();
}


// Gets a map of named colors and their values.
// -----------------------------------------------------------------------------
// @return [Map]
@function get-colors() {
    @return get("asimov/colors");
}
